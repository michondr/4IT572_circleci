- name: deploy to ec2
  hosts: localhost
  connection: local
  vars:
    ansible_ssh_private_key_file: /home/circleci/project/devops-final-hw.pem


  tasks:
    - name: Identify running instances for termination
      ec2_instance_info:
        region: us-east-1
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        security_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
      register: ec2_stat

    - name: launch instance
      ec2:
        instance_type: t2.micro
        image: ami-042e8287309f5df03
        region: us-east-1
        key_name: devops-final-hw
        vpc_subnet_id: subnet-d138009c
        assign_public_ip: yes
        wait: true
        count: 1
        group: eshop
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        security_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
      register: ec2

    - name: add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ ec2.instances }}'

    - name: wait for ssh connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=10 timeout=300 state=started
      with_items: '{{ ec2.instances }}'

- name: configure ec2
  hosts: launched
  connection: ssh
  vars:
    ansible_ssh_private_key_file: /home/circleci/project/devops-final-hw.pem

  tasks:
    - name: install docker
      apt:
        name:
          - containerd
          - docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: get project files from git
      git:
        repo: 'https://github.com/michondr/4IT572_circleci.git'
        dest: ./app
    - name: build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: run docker with eshop
      shell: cd app && docker run -p 80:3000 myeshop
      async: 60
      poll: 10
      become: yes
    - wait_for:
        port: 80

- name: terminate instances
  hosts: localhost
  connection: local
  vars:
    ansible_ssh_private_key_file: /home/circleci/project/devops-final-hw.pem

  tasks:
    - name: kill running instances
      ec2:
        region: us-east-1
        state: absent
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        security_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
        instance_ids: '{{ item.instance_id }}'
      loop: "{{ ec2_stat.instances }}"
      loop_control:
        label: "{{ item.instance_id }}"
